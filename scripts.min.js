let environment,scoreTracker,target,pinSource,updateStorage,settings={score:0};chrome.storage.sync.get("settings",e=>{isEmpty(e.settings)||(settings=e.settings,console.log(settings))});const game={resetTimeout:2e3,width:320,height:480},colors={yellow:[255,255,235],green:[125,220,50],red:[245,10,0],dark:[25,25,40],gray:[180,180,150]},rotationSpeeds={steps:[.03,.015,.05,-.03,-.015,-.05],timeout:1e3},targetProperties={x:game.width/2,y:game.height/4,diameter:game.height/5,scoreY:game.height/4+game.height/100,highScoreY:game.height-game.height/15},pinSourceProperties={x:game.width/2,y:.85*game.height,diameter:.03*game.height,speed:.04*game.height,pinLength:.13*game.height,tipRadius:.012*game.height};function setup(){createCanvas(game.width,game.height),environment=new Environment,target=new Target,pinSource=new PinSource,scoreTracker=new ScoreTracker}function mouseClicked(){return environment.isGameOver||pinSource.throwPin(),!1}function draw(){var e;let t=environment.isGameOver,{red:i,green:r,yellow:s}=colors,o=0;pinSource.pins.forEach(e=>{!e.missedTarget&&o++}),t?(background(i),(e=o)>settings.score&&(settings.score=e,chrome.storage.sync.set({settings}))):(background(o>settings.score?r:s),pinSource.updatePins(target)),pinSource.render(),pinSource.pins.forEach(e=>e.render()),scoreTracker.setScore(o),target.render(),scoreTracker.render()}class Environment{constructor(){this.resetTimer,this.isGameOver=!1,this.setRotationSpeed()}setRotationSpeed(){this.rotationSpeed=rotationSpeeds.steps[Math.floor(Math.random()*rotationSpeeds.steps.length)],this.resetTimer=setTimeout(()=>{this.setRotationSpeed()},rotationSpeeds.timeout)}endGame(){this.isGameOver=!0,clearTimeout(this.resetTimer),setTimeout(()=>{this.isGameOver=!1,pinSource.pins.length=0,this.setRotationSpeed()},game.resetTimeout)}}class PinSource{constructor(){this.pins=[]}throwPin(){this.pins.push(new Pin)}updatePins(e){for(let t of this.pins)t.missedTarget?t.updateOnTargetPin(t.position.y-pinSourceProperties.pinLength<e.position.y+e.diameter/2,this.pins):t.updateStuckPin()}render(){circle(pinSourceProperties.x,pinSourceProperties.y,pinSourceProperties.diameter),stroke(colors.dark),strokeWeight(7),noFill()}}class Pin{constructor(){this.missedTarget=!0,this.position=createVector(pinSourceProperties.x,pinSourceProperties.y),this.pinPointPos=createVector(pinSourceProperties.x,pinSourceProperties.y-pinSourceProperties.pinLength),this.tipRadius=pinSourceProperties.tipRadius,this.angle=PI/2}updateOnTargetPin(e,t){let i=this.collision(t);e?this.missedTarget=!1:i?environment.endGame():(this.position.y-=pinSourceProperties.speed,this.pinPointPos.y-=pinSourceProperties.speed)}updateStuckPin(){this.angle+=environment.rotationSpeed;let e=target.diameter/2+pinSourceProperties.pinLength;this.position=createVector(target.position.x+e*cos(this.angle),target.position.y+e*sin(this.angle)),this.pinPointPos=createVector(target.position.x+target.diameter/2*cos(this.angle),target.position.y+target.diameter/2*sin(this.angle))}collision(e){let t=!1;for(let i of e)dist(this.pinPointPos.x,this.pinPointPos.y,i.position.x,i.position.y)<=i.tipRadius&&(t=!0);return t}render(){push(),stroke(colors.dark),strokeWeight(1.5),line(this.position.x,this.position.y,this.pinPointPos.x,this.pinPointPos.y),fill(colors.dark),circle(this.position.x,this.position.y,2*this.tipRadius),pop()}}class Target{constructor(){this.position=createVector(targetProperties.x,targetProperties.y),this.diameter=targetProperties.diameter}render(){push(),translate(this.position.x,this.position.y),noStroke(),fill(colors.dark),circle(0,0,this.diameter),pop()}}class ScoreTracker{constructor(){this.score=0}resetScore(){this.score=0}setScore(e){this.score=e}render(){push(),textAlign(CENTER,CENTER),noStroke(),fill(colors.yellow),textSize(40),text(this.score,targetProperties.x,targetProperties.scoreY),pop(),void 0!==settings.score&&(push(),textAlign(CENTER,CENTER),noStroke(),fill(colors.dark),textSize(15),text(`Your Best: ${settings.score}`,targetProperties.x,targetProperties.highScoreY),pop())}}function isEmpty(e){return"object"!=typeof e||0===Object.keys(e).length}